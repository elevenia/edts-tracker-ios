// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name EDTSTracker
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import EDTSTracker
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
import _StringProcessing
public enum EDTSTrackerHeaderType {
  case authorization
  case xAPIKey
  public static func == (a: EDTSTracker.EDTSTrackerHeaderType, b: EDTSTracker.EDTSTrackerHeaderType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class EDTSTracking : ObjectiveC.NSObject {
  public static let sharedInstance: EDTSTracker.EDTSTracking
  @objc override dynamic public init()
  public func configure(host: Foundation.URL, token: Swift.String, headerType: EDTSTracker.EDTSTrackerHeaderType)
  public func synchronizeTrackingData()
  public func setUserId(userId: Swift.String)
  public func setUTMInfo(utm: Swift.String?)
  public func sendEventImpression(name: Swift.String, impressions: [Swift.String]?)
  public func sendEventAppActivity(name: Swift.String, pageViewId: Swift.String?, eventCount: Swift.String?, lat: Swift.String?, lng: Swift.String?)
  public func sendEventClickLink(linkLabel: Swift.String, pageName: Swift.String?, details: Swift.String?, eventCategory: Swift.String?, pageViewId: Swift.String?, eventCount: Swift.String?, lat: Swift.String?, lng: Swift.String?)
  public func sendEventPageView(pageName: Swift.String, prevPage: Swift.String?, pageViewId: Swift.String?, eventCount: Swift.String?, lat: Swift.String?, lng: Swift.String?)
  public func sendEventFilterSort(name: Swift.String, sort: Swift.String)
  public func sendEventFilterValue(name: Swift.String, list: [Swift.String])
  public func sendEventSubmission(event_label: Swift.String, pageViewId: Swift.String?, eventCategory: Swift.String?, eventCount: Swift.String?, pageName: Swift.String?, status: Swift.String?, failed: Swift.String?, details: Swift.String?, lat: Swift.String?, lng: Swift.String?)
  public func sendEventPageDetail(name: Swift.String, details: Swift.String?)
  public func sendEventError(exception: Swift.String, stackTrace: Swift.String)
  public func sendEventBackendData(name: Swift.String, eventDetails: Swift.String, details: Swift.String?)
  public func sendEventCustom(name: Swift.String, eventDetails: Swift.String)
  @objc deinit
}
extension EDTSTracker.EDTSTrackerHeaderType : Swift.Equatable {}
extension EDTSTracker.EDTSTrackerHeaderType : Swift.Hashable {}
