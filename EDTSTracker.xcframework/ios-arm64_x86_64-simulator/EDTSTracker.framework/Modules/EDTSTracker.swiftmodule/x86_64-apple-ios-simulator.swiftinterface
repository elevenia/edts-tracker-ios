// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name EDTSTracker
@_exported import EDTSTracker
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
public enum EDTSTrackerHeaderType {
  case authorization
  case xAPIKey
  public static func == (a: EDTSTracker.EDTSTrackerHeaderType, b: EDTSTracker.EDTSTrackerHeaderType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class EDTSTracking : ObjectiveC.NSObject {
  public static let sharedInstance: EDTSTracker.EDTSTracking
  @objc override dynamic public init()
  public func configure(host: Foundation.URL, token: Swift.String, headerType: EDTSTracker.EDTSTrackerHeaderType)
  public func synchronizeTrackingData()
  public func setUserId(userId: Swift.String)
  public func setUTMInfo(utm: Swift.String?)
  public func setLocationInfo(longitude: Swift.String, latitude: Swift.String)
  public func sendEventPageView(pageViewId: Swift.String, pageName: Swift.String, pagePath: Swift.String?, prevPage: Swift.String?, prevPath: Swift.String?, eventCount: Swift.String?)
  public func sendEventClickLink(pageViewId: Swift.String, pageName: Swift.String, linkLabel: Swift.String, linkURL: Swift.String?, details: [Swift.String : Any]?, eventCategory: Swift.String?, eventCount: Swift.String?)
  public func sendEventSubmission(pageViewId: Swift.String, pageName: Swift.String, details: [Swift.String : Any]?, event_label: Swift.String, status: Swift.String?, failed: Swift.String?, eventCategory: Swift.String?, eventCount: Swift.String)
  public func sendEventSearch(pageViewId: Swift.String, pageName: Swift.String, searchInput: Swift.String?, details: Any?, eventCount: Swift.String?)
  public func sendEventFilter(pageViewId: Swift.String, pageName: Swift.String, list: [Swift.String : Any]?, eventCategory: Swift.String?, eventCount: Swift.String?)
  public func sendEventSort(pageViewId: Swift.String, pageName: Swift.String, sort: Swift.String, eventCount: Swift.String?)
  public func sendEventImpression(pageViewId: Swift.String, pageName: Swift.String, impressions: [[Swift.String : Any]]?, eventCategory: Swift.String?, eventCount: Swift.String?)
  public func sendEventDisplayedItem(pageViewId: Swift.String, pageName: Swift.String, list: [Swift.String]?, eventCount: Swift.String?)
  public func sendEventPageDetail(pageViewId: Swift.String, pageName: Swift.String, details: Swift.String?, eventCount: Swift.String?)
  public func sendEventAppActivity(pageViewId: Swift.String, details: Swift.String?, eventCount: Swift.String?)
  public func sendEventBackendData(pageViewId: Swift.String, pageName: Swift.String, eventDetails: Swift.String, details: Swift.String?, eventCount: Swift.String?)
  public func sendEventCustom(name: Swift.String, eventDetails: Swift.String)
  public func sendEventError(exception: Swift.String, stackTrace: Swift.String)
  @objc deinit
}
extension EDTSTracker.EDTSTrackerHeaderType : Swift.Equatable {}
extension EDTSTracker.EDTSTrackerHeaderType : Swift.Hashable {}
